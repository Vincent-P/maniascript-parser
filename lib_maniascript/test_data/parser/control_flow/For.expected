NODE_ROOT 0..39 {
  NODE_FUNC_DECL 0..39 {
    NODE_IDENTIFIER 0..4 {
      TOKEN_IDENT("main") 0..4
    }
    TOKEN_OPEN_PAREN("(") 4..5
    TOKEN_CLOSE_PAREN(")") 5..6
    TOKEN_WHITESPACE("\n") 6..7
    NODE_BLOCK 7..39 {
      TOKEN_OPEN_BRACE("{") 7..8
      TOKEN_WHITESPACE("\n    ") 8..13
      NODE_FOR 13..37 {
        TOKEN_FOR("for") 13..16
        TOKEN_OPEN_PAREN("(") 16..17
        NODE_IDENTIFIER 17..18 {
          TOKEN_IDENT("I") 17..18
        }
        TOKEN_COMMA(",") 18..19
        TOKEN_WHITESPACE(" ") 19..20
        NODE_LITERAL 20..21 {
          TOKEN_INTEGER("0") 20..21
        }
        TOKEN_COMMA(",") 21..22
        TOKEN_WHITESPACE(" ") 22..23
        NODE_LITERAL 23..24 {
          TOKEN_INTEGER("1") 23..24
        }
        TOKEN_CLOSE_PAREN(")") 24..25
        TOKEN_WHITESPACE(" ") 25..26
        NODE_BLOCK 26..37 {
          TOKEN_OPEN_BRACE("{") 26..27
          TOKEN_WHITESPACE(" ") 27..28
          NODE_STATEMENT 28..35 {
            NODE_FUNCTION_CALL 28..34 {
              NODE_IDENTIFIER 28..31 {
                TOKEN_IDENT("log") 28..31
              }
              TOKEN_OPEN_PAREN("(") 31..32
              NODE_IDENTIFIER 32..33 {
                TOKEN_IDENT("I") 32..33
              }
              TOKEN_CLOSE_PAREN(")") 33..34
            }
            TOKEN_SEMICOLON(";") 34..35
          }
          TOKEN_WHITESPACE(" ") 35..36
          TOKEN_CLOSE_BRACE("}") 36..37
        }
      }
      TOKEN_WHITESPACE("\n") 37..38
      TOKEN_CLOSE_BRACE("}") 38..39
    }
  }
}